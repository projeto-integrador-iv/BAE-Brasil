// <auto-generated />
using System;
using BAE_Brasil.DataSource;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BAE_Brasil.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210522214052_UserProfileNonInherited")]
    partial class UserProfileNonInherited
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("BAE_Brasil.Models.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Bairro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cep")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Complement")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("TEXT");

                    b.HasKey("AddressId");

                    b.HasIndex("UserProfileId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("BAE_Brasil.Models.Contact", b =>
                {
                    b.Property<Guid>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ContactId");

                    b.Property<int>("ContactType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("TEXT");

                    b.HasKey("ContactId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("BAE_Brasil.Models.Document", b =>
                {
                    b.Property<Guid>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("DocumentType")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("TEXT");

                    b.HasKey("DocumentId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("BAE_Brasil.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserType")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BAE_Brasil.Models.UserProfile", b =>
                {
                    b.Property<Guid>("UserProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserProfileId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("BAE_Brasil.Models.Address", b =>
                {
                    b.HasOne("BAE_Brasil.Models.UserProfile", "Profile")
                        .WithOne("Address")
                        .HasForeignKey("BAE_Brasil.Models.Address", "UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("BAE_Brasil.Models.Contact", b =>
                {
                    b.HasOne("BAE_Brasil.Models.UserProfile", "Profile")
                        .WithMany("Contacts")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("BAE_Brasil.Models.Document", b =>
                {
                    b.HasOne("BAE_Brasil.Models.UserProfile", "Profile")
                        .WithMany("Documents")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("BAE_Brasil.Models.UserProfile", b =>
                {
                    b.HasOne("BAE_Brasil.Models.User", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("BAE_Brasil.Models.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BAE_Brasil.Models.User", b =>
                {
                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("BAE_Brasil.Models.UserProfile", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Contacts");

                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
